<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.test.project.dao.gen.RoleMapper" >
  <resultMap id="BaseResultMap" type="com.test.project.po.gen.Role" >
    <id column="ROLE_ID" property="roleId" jdbcType="VARCHAR" />
    <result column="ROLE_NAME" property="roleName" jdbcType="VARCHAR" />
    <result column="UPDATE_TIME" property="updateTime" jdbcType="DATE" />
    <result column="CREATE_TIME" property="createTime" jdbcType="DATE" />
    <result column="ROLE_DESCRIPTION" property="roleDescription" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ROLE_ID, ROLE_NAME, UPDATE_TIME, CREATE_TIME, ROLE_DESCRIPTION
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.test.project.po.gen.RoleExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ROLE_DETAIL
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from ROLE_DETAIL
    where ROLE_ID = #{roleId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from ROLE_DETAIL
    where ROLE_ID = #{roleId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.test.project.po.gen.RoleExample" >
    delete from ROLE_DETAIL
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.test.project.po.gen.Role" >
    insert into ROLE_DETAIL (ROLE_ID, ROLE_NAME, UPDATE_TIME, 
      CREATE_TIME, ROLE_DESCRIPTION)
    values (#{roleId,jdbcType=VARCHAR}, #{roleName,jdbcType=VARCHAR}, #{updateTime,jdbcType=DATE}, 
      #{createTime,jdbcType=DATE}, #{roleDescription,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.test.project.po.gen.Role" >
    insert into ROLE_DETAIL
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="roleId != null" >
        ROLE_ID,
      </if>
      <if test="roleName != null" >
        ROLE_NAME,
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="roleDescription != null" >
        ROLE_DESCRIPTION,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="roleId != null" >
        #{roleId,jdbcType=VARCHAR},
      </if>
      <if test="roleName != null" >
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=DATE},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=DATE},
      </if>
      <if test="roleDescription != null" >
        #{roleDescription,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.test.project.po.gen.RoleExample" resultType="java.lang.Integer" >
    select count(*) from ROLE_DETAIL
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update ROLE_DETAIL
    <set >
      <if test="record.roleId != null" >
        ROLE_ID = #{record.roleId,jdbcType=VARCHAR},
      </if>
      <if test="record.roleName != null" >
        ROLE_NAME = #{record.roleName,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null" >
        UPDATE_TIME = #{record.updateTime,jdbcType=DATE},
      </if>
      <if test="record.createTime != null" >
        CREATE_TIME = #{record.createTime,jdbcType=DATE},
      </if>
      <if test="record.roleDescription != null" >
        ROLE_DESCRIPTION = #{record.roleDescription,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update ROLE_DETAIL
    set ROLE_ID = #{record.roleId,jdbcType=VARCHAR},
      ROLE_NAME = #{record.roleName,jdbcType=VARCHAR},
      UPDATE_TIME = #{record.updateTime,jdbcType=DATE},
      CREATE_TIME = #{record.createTime,jdbcType=DATE},
      ROLE_DESCRIPTION = #{record.roleDescription,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.test.project.po.gen.Role" >
    update ROLE_DETAIL
    <set >
      <if test="roleName != null" >
        ROLE_NAME = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME = #{updateTime,jdbcType=DATE},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=DATE},
      </if>
      <if test="roleDescription != null" >
        ROLE_DESCRIPTION = #{roleDescription,jdbcType=VARCHAR},
      </if>
    </set>
    where ROLE_ID = #{roleId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.test.project.po.gen.Role" >
    update ROLE_DETAIL
    set ROLE_NAME = #{roleName,jdbcType=VARCHAR},
      UPDATE_TIME = #{updateTime,jdbcType=DATE},
      CREATE_TIME = #{createTime,jdbcType=DATE},
      ROLE_DESCRIPTION = #{roleDescription,jdbcType=VARCHAR}
    where ROLE_ID = #{roleId,jdbcType=VARCHAR}
  </update>
  <select resultMap="BaseResultMap" parameterType="com.test.project.po.gen.RoleExample" id="selectByExampleWithRowbounds" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ROLE_DETAIL
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
</mapper>